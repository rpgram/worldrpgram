version: "3"

networks:
  rpgram:
    external: true


services:
  setup_app:
    build: .
    container_name: setup_app
    ports:
      - "8001:8001"
    env_file: .env.compose
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8001/docs || exit 1
      interval: 5s
    networks:
      - rpgram

  vector:
    image: timberio/vector:0.42.0-debian
    volumes:
      - ./observability/vector.yaml:/etc/vector/vector.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      setup_app:
        condition: service_healthy
      loki:
        condition: service_healthy
    networks:
      - rpgram

  loki:
    image: grafana/loki:3.0.0
    environment:
      TZ: Europe/Moscow
    container_name: loki
    command: -config.file=/etc/loki/loki-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki_data:/loki
    healthcheck:
      test: wget --quiet --tries=1 --output-document=- http://localhost:3100/ready | grep -q -w ready || exit 1
      start_period: 20s
      interval: 10s
      timeout: 1s
      retries: 12
    networks:
      - rpgram

  prometheus:
    image: prom/prometheus
    container_name: prometheus_rpgram
    ports:
      - 9090:9090
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - rpgram


volumes:
  loki_data:
